type Subscribe @model {
  id: ID!
  email: String!
}

type Team @model {
  id: ID!
  name: String!
  account: [Account] @connection(name: "TeamAccount")
  teamMembers: [User] @connection(name: "TeamUsers")
  renewalDate: String
  sfKey: String
  sfUsername: String
}

type User @model {
  id: ID!
  team: Team @connection(name: "TeamUsers")
  name: String
  email: String
  profileImg: String
  isAdmin: Boolean
  salesforceKey: String
  salesforceSecret: String
  salesforcePassword: String
  clients: [Client] @connection(name: "UserClient")
  clientNotes: [ClientNote] @connection(name: "UserNote")
  clientStrategies: [Strategy] @connection(name: "UserStrategy")
}

type Account @model {
  id: ID!
  team: Team @connection(name: "TeamAccount")
  name: String!
  renewalDate: String
  contract: Int
  healthScore: String
  accountMembers: [Client] @connection(name: "AccountClient")
}

type Client @model {
  id: ID!
  accountId: Account @connection(name: "AccountClient")
  contactId: User @connection(name: "UserClient")
  noteId: [ClientNote] @connection(name: "ClientNote")
  isDecisionMaker: Boolean
  avatarId: String
  salesforceId: ID
  email: String
  name: String!
  strategy: [Strategy] @connection(name: "ClientStrategy")
  position: String
  lastContact: String
}

type ClientNote @model {
  id: ID!
  clientId: Client @connection(name: "ClientNote")
  ownerId: User @connection(name: "UserNote")
  content: String
  title: String
  lastInterationSore: Int
  isInteractionNote: Boolean
}

type Strategy @model {
  id: ID!
  badgeName: String!
  clientId: Client @connection(name: "ClientStrategy")
  ownerId: User @connection(name: "UserStrategy")
  title: String!
  description: String
  status: String
}

type Avatar @model {
  id: ID!
  gender: String!
  link: String
  Animation: String
  mood: String
}
